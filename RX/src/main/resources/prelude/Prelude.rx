// === Prelude ===

// --- Control Structures ---
def if(true, thenBranch, _) = thenBranch
def if(false, _, elseBranch) = elseBranch

// --- Boolean Logic ---
def not(true)  = false
def not(false) = true

def and(true,  true)  = true
def and(_,  false) = false
def and(false, _)     = false

def or(true,  _)     = true
def or(_, true)  = true
def or(false, false) = false

// --- List Constructors ---
def Nil() = Nil()
def Cons(h, t) = Cons(h, t)

// --- List Operations ---
def length(Nil()) = 0
def length(Cons(h, t)) = 1 + length(t)

def sum(Nil()) = 0
def sum(Cons(h, t)) = h + sum(t)

def append(Nil(), ys) = ys
def append(Cons(h, t), ys) = Cons(h, append(t, ys))

def reverse(xs) = rev(xs, Nil())
def rev(Nil(), acc) = acc
def rev(Cons(h, t), acc) = rev(t, Cons(h, acc))

def head(Cons(h, t)) = h
def tail(Cons(h, t)) = t
def last(Cons(h, Nil())) = h
def last(Cons(h, t)) = last(t)

def isEmpty(Nil()) = true
def isEmpty(Cons(h, t)) = false

// --- Equality on Lists ---
def eqList(Nil(), Nil()) = true
def eqList(Cons(x, xs), Cons(y, ys)) = x == y && eqList(xs, ys)
def eqList(_, _) = false