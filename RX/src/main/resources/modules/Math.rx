// --- Factorial (n!) ---
def fact(0) = 1
def fact(n) = n * fact(n - 1)

// --- Fibonacci Numbers ---
def fib(0) = 0
def fib(1) = 1
def fib(n) = fib(n - 1) + fib(n - 2)

// --- Greatest Common Divisor (Euclidean Algorithm) ---
def gcd(x, 0) = x
def gcd(x, y) = gcd(y, x % y)

// --- Least Common Multiple ---
def lcm(x, y) = (x * y) / gcd(x, y)

// --- Exponentiation ---
def pow(_, 0) = 1
def pow(base, exp) = base * pow(base, exp - 1)

// --- Range Check ---
def between(x, a, b) = x >= a && x <= b

// --- Triangle Numbers ---
def triangle(n) = n * (n + 1) / 2

// --- Constants ---
def pi() = 3.141592653589793
def tau() = 2 * pi()
def twoPi() = 2 * pi()
def e() = 2.718281828459045
def goldenRatio() = (1 + sqrt(5)) / 2

// --- Square Root using Newton-Raphson Iteration ---
def sqrtIter(x, guess, 0) = guess
def sqrtIter(x, guess, n) = sqrtIter(x, (guess + x / guess) / 2, n - 1)
def sqrt(x) = sqrtIter(x, x / 2, 10)

// --- Degree <-> Radian Conversion ---
def degToRad(d) = d * pi() / 180
def radToDeg(r) = r * 180 / pi()

// --- Trigonometric Functions via Taylor Series ---
def sinTaylor(x, 0) = x
def sinTaylor(x, n) = sinTaylor(x, n - 1) + pow(0 - 1, n) * pow(x, 2 * n + 1) / fact(2 * n + 1)
def sin(x) = sinTaylor(x, 5)

def cosTaylor(x, 0) = 1
def cosTaylor(x, n) = cosTaylor(x, n - 1) + pow(0 - 1, n) * pow(x, 2 * n) / fact(2 * n)
def cos(x) = cosTaylor(x, 5)

def tan(x) = sin(x) / cos(x)

// --- Inverse Trigonometric Functions via Taylor (Approximate) ---
def arcsinTaylor(x, 0) = x
def arcsinTaylor(x, n) = arcsinTaylor(x, n - 1) + (fact(2 * n) / (pow(4, n) * pow(fact(n), 2) * (2 * n + 1))) * pow(x, 2 * n + 1)
def arcsin(x) = arcsinTaylor(x, 3)

def arccos(x) = pi() / 2 - arcsin(x)
def arctan(x) = x - pow(x, 3) / 3 + pow(x, 5) / 5 - pow(x, 7) / 7

// --- Absolute Value ---
def abs(x) = if(x < 0, 0 - x, x)

// --- Sign Function ---
def sign(x) = if(x < 0, 0-1, if(x > 0, 1, 0))

// --- Minimum / Maximum ---
def min(x, y) = if(x < y, x, y)
def max(x, y) = if(x > y, x, y)

// --- Clamp (limit x to [a, b]) ---
def clamp(x, minVal, maxVal) = max(min(x, maxVal), minVal)

// --- Basic Number Helpers ---
def square(x) = x * x
def double(x) = x * 2
def inc(x) = x + 1
def isZero(x) = x == 0
def isPositive(x) = x > 0
def isNegative(x) = x < 0
def isEven(x) = x % 2 == 0
def isOdd(x) = !(isEven(x))